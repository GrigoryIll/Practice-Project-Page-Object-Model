{"name": "Change profile name", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_feature_profile.TestFeatureProfile object at 0x7e1ade7266c0>\n\n    @allure.title(\"Change profile name\")\n    @allure.severity(\"Critical\")\n    @pytest.mark.smoke\n    def test_change_profile_name(self):\n        self.login_page.open()\n        self.login_page.enter_login(self.data.LOGIN)\n        self.login_page.enter_password(self.data.PASSWORD)\n        self.login_page.submit_button()\n>       self.dashboard_page.click_my_info_link()\n\ntests/test_feature_profile.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/dashboard_page.py:15: in click_my_info_link\n    self.wait.until(EC.element_to_be_clickable(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7ab7343d3a8d65794d5a988b7b01cdc8\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7e1add385620>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException"}, "steps": [{"name": "Open https://opensource-demo.orangehrmlive.com/web/index.php/auth/login page", "status": "passed", "start": 1747345105710, "stop": 1747345107552}, {"name": "Enter login", "status": "passed", "parameters": [{"name": "login", "value": "''"}], "start": 1747345107553, "stop": 1747345108753}, {"name": "Enter password", "status": "passed", "parameters": [{"name": "password", "value": "''"}], "start": 1747345108754, "stop": 1747345108800}, {"name": "Click submit button", "status": "passed", "start": 1747345108800, "stop": 1747345108848}, {"name": "Click on 'My info' link", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/dashboard_page.py\", line 15, in click_my_info_link\n    self.wait.until(EC.element_to_be_clickable(\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1747345108848, "stop": 1747345119286}], "start": 1747345105710, "stop": 1747345119287, "uuid": "6f332224-6100-4be7-bdaa-ed1f00116f42", "historyId": "ff5b156a20853621532b185095b6758d", "testCaseId": "ff5b156a20853621532b185095b6758d", "fullName": "tests.test_feature_profile.TestFeatureProfile#test_change_profile_name", "labels": [{"name": "severity", "value": "Critical"}, {"name": "feature", "value": "Profile Functionality"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_feature_profile"}, {"name": "subSuite", "value": "TestFeatureProfile"}, {"name": "host", "value": "9d6c6c374a59"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_feature_profile"}]}